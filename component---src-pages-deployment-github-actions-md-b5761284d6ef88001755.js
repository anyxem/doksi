(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{N7ne:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return l}));t("E5k/"),t("rzGZ"),t("Dq+y"),t("8npG"),t("Ggvi"),t("bNpn"),t("q1tI");var o=t("E/Ix"),a=t("hhGP");t("qKvR");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/Deployment/Github_actions.md"}});var c={_frontmatter:s},i=a.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(i,r({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"deploy-documentation-automatic-with-github-actions"},"Deploy documentation automatic with Github Actions"),Object(o.b)("h2",{id:"add-workflow-to-source-code"},"Add workflow to source code"),Object(o.b)("p",null,"Create a new file in your source repository, named ",Object(o.b)("inlineCode",{parentName:"p"},".github/workflows/deploy_docs.yml")),Object(o.b)("p",null,"It could contain an action with this steps:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-yaml"}),'name: Deploy documentation\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v1\n\n      - name: Set Node.js\n        uses: actions/setup-node@v1\n        with:\n          node-version: 10.x\n\n      - name: Install npm dependencies\n        working-directory: ./docs\n        run: npm install\n\n      - name: Run tests\n        working-directory: ./docs\n        continue-on-error: false\n        run: npm run test\n\n      - name: Deploy pages\n        working-directory: ./docs\n        run: |\n          git config --global user.name "Spark documentation bot"\n          git config --global user.email "spark@docbot.com"\n          npx gatsby build --prefix-paths && npx gh-pages -d public -r https://${{ secrets.GH_TOKEN }}@github.com/losol/doksi.git\n')),Object(o.b)("p",null,"Please remember to change the link to your own git repository."),Object(o.b)("h2",{id:"get-personal-access-token"},"Get personal access token"),Object(o.b)("p",null,"In GitHub Settings -> Developer -> Personal access token, create a new Personal access token with repo scope:\n",Object(o.b)("img",{alt:"image",src:"https://user-images.githubusercontent.com/17168367/69485965-ad869780-0e46-11ea-91a3-dbbdf6c70be3.png"})),Object(o.b)("h2",{id:"add-repo-secret"},"Add repo secret"),Object(o.b)("p",null,"Then add a new secret to the repo settings, with name ",Object(o.b)("inlineCode",{parentName:"p"},"GH_TOKEN")),Object(o.b)("p",null,Object(o.b)("img",{alt:"image",src:"https://user-images.githubusercontent.com/17168367/69485949-4b2d9700-0e46-11ea-92f7-8b3098913918.png"})))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/Deployment/Github_actions.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-deployment-github-actions-md-b5761284d6ef88001755.js.map